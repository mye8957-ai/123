-- 获取Roblox核心服务
local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local TweenService = game:GetService("TweenService")
local GuiService = game:GetService("GuiService")
local RunService = game:GetService("RunService")

-- 检查是否已存在悬浮窗，避免重复生成
if LocalPlayer:WaitForChild("PlayerGui"):FindFirstChild("FloatingWindow") then
    return
end

-- 创建ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")
screenGui.ResetOnSpawn = false
screenGui.Name = "FloatingWindow"
screenGui.IgnoreGuiInset = true -- 适配屏幕安全区域

-- 创建悬浮窗（白色圆角正方形）
local floatingFrame = Instance.new("Frame")
floatingFrame.Size = UDim2.new(0, 50, 0, 50)
floatingFrame.Position = UDim2.new(0, 100, 0, 100)
floatingFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
floatingFrame.BorderSizePixel = 0
floatingFrame.ClipsDescendants = true
floatingFrame.Name = "FloatingFrame"
floatingFrame.Active = true
floatingFrame.Parent = screenGui

local uiCorner = Instance.new("UICorner")
uiCorner.CornerRadius = UDim.new(0, 8)
uiCorner.Parent = floatingFrame

local uiStroke = Instance.new("UIStroke")
uiStroke.Color = Color3.fromRGB(255, 0, 0)
uiStroke.Thickness = 2
uiStroke.Parent = floatingFrame

local zText = Instance.new("TextLabel")
zText.Size = UDim2.new(1, 0, 1, 0)
zText.BackgroundTransparency = 1
zText.Text = "Z"
zText.TextColor3 = Color3.fromRGB(255, 0, 0)
zText.TextScaled = true
zText.Font = Enum.Font.SourceSansBold
zText.TextSize = 24
zText.Parent = floatingFrame

-- 创建黑色UI面板
local panelFrame = Instance.new("Frame")
panelFrame.Size = UDim2.new(0, 460, 0, 320)
panelFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
panelFrame.BorderSizePixel = 0
panelFrame.ClipsDescendants = true
panelFrame.Name = "PanelFrame"
panelFrame.Active = true
panelFrame.Visible = false
panelFrame.Parent = screenGui
local panelCorner = Instance.new("UICorner")
panelCorner.CornerRadius = UDim.new(0, 12)
panelCorner.Parent = panelFrame
local panelStroke = Instance.new("UIStroke")
panelStroke.Color = Color3.fromRGB(255, 0, 0)
panelStroke.Thickness = 2
panelStroke.Parent = panelFrame

-- 创建减号按钮
local minusButton = Instance.new("TextButton")
minusButton.Size = UDim2.new(0, 30, 0, 30)
minusButton.Position = UDim2.new(1, -40, 0, 10)
minusButton.BackgroundColor3 = Color3.fromRGB(128, 128, 128)
minusButton.Text = "-"
minusButton.TextColor3 = Color3.fromRGB(255, 255, 255)
minusButton.TextScaled = true
minusButton.Font = Enum.Font.SourceSansBold
minusButton.TextSize = 20
minusButton.Parent = panelFrame
local buttonCorner = Instance.new("UICorner")
buttonCorner.CornerRadius = UDim.new(0, 6)
buttonCorner.Parent = minusButton

-- 创建时间显示
local timeLabel = Instance.new("TextLabel")
timeLabel.Size = UDim2.new(0, 150, 0, 20)
timeLabel.Position = UDim2.new(0.5, -75, 0, 10) -- 顶部中间
timeLabel.BackgroundTransparency = 1
timeLabel.Text = "2025.08.15.06.48" -- 初始占位
timeLabel.TextColor3 = Color3.fromRGB(255, 255, 255) -- 白色文字
timeLabel.TextSize = 12 -- 12像素
timeLabel.Font = Enum.Font.SourceSans
timeLabel.Parent = panelFrame

-- 实时更新时间
local function updateTime()
    local currentTime = os.date("*t", os.time())
    timeLabel.Text = string.format(
        "%04d.%02d.%02d.%02d.%02d",
        currentTime.year,
        currentTime.month,
        currentTime.day,
        currentTime.hour,
        currentTime.min
    )
end

RunService.Heartbeat:Connect(function()
    updateTime()
end)

-- 拖动功能变量（悬浮窗）
local dragging = false
local dragStart = nil
local startPos = nil
local inputStartTime = nil
local inputStartPos = nil

-- 拖动功能变量（面板）
local panelDragging = false
local panelDragStart = nil
local panelStartPos = nil

-- 动画设置
local tweenInfoFloat = TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
local tweenInfoClick = TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
local tweenInfoPanel = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)

-- 悬浮窗拖动开始
floatingFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = floatingFrame.Position
        inputStartTime = tick()
        inputStartPos = input.Position

        local tween = TweenService:Create(floatingFrame, tweenInfoFloat, {
            Size = UDim2.new(0, 55, 0, 55)
        })
        local strokeTween = TweenService:Create(uiStroke, tweenInfoFloat, {
            Thickness = 3
        })
        local textTween = TweenService:Create(zText, tweenInfoFloat, {
            TextSize = 26
        })
        tween:Play()
        strokeTween:Play()
        textTween:Play()
    end
end)

-- 悬浮窗和面板拖动
UserInputService.InputChanged:Connect(function(input)
    if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
        local delta = input.Position - dragStart
        floatingFrame.Position = UDim2.new(
            startPos.X.Scale,
            startPos.X.Offset + delta.X,
            startPos.Y.Scale,
            startPos.Y.Offset + delta.Y
        )
    elseif panelDragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
        local delta = input.Position - panelDragStart
        panelFrame.Position = UDim2.new(
            panelStartPos.X.Scale,
            panelStartPos.X.Offset + delta.X,
            panelStartPos.Y.Scale,
            panelStartPos.Y.Offset + delta.Y
        )
    end
end)

-- 拖动结束或点击检测
UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        if dragging then
            dragging = false
            local tween = TweenService:Create(floatingFrame, tweenInfoFloat, {
                Size = UDim2.new(0, 50, 0, 50)
            })
            local strokeTween = TweenService:Create(uiStroke, tweenInfoFloat, {
                Thickness = 2
            })
            local textTween = TweenService:Create(zText, tweenInfoFloat, {
                TextSize = 24
            })
            tween:Play()
            strokeTween:Play()
            textTween:Play()

            local duration = tick() - inputStartTime
            local distance = (input.Position - inputStartPos).Magnitude
            if duration < 0.3 and distance < 10 then
                local tween = TweenService:Create(floatingFrame, tweenInfoClick, {
                    Size = UDim2.new(0, 60, 0, 60),
                    BackgroundTransparency = 1
                })
                local strokeTween = TweenService:Create(uiStroke, tweenInfoClick, {
                    Transparency = 1
                })
                local textTween = TweenService:Create(zText, tweenInfoClick, {
                    TextTransparency = 1
                })
                tween:Play()
                strokeTween:Play()
                textTween:Play()

                tween.Completed:Connect(function()
                    floatingFrame.Visible = false
                    floatingFrame.BackgroundTransparency = 0
                    zText.TextTransparency = 0
                    uiStroke.Transparency = 0
                    uiStroke.Thickness = 2

                    local directions = {"Top", "Bottom", "Left", "Right"}
                    local direction = directions[math.random(1, 4)]
                    local screenSize = GuiService:GetScreenResolution()
                    local startPos

                    if direction == "Top" then
                        startPos = UDim2.new(0.5, -230, -0.5, -320)
                    elseif direction == "Bottom" then
                        startPos = UDim2.new(0.5, -230, 1.5, 320)
                    elseif direction == "Left" then
                        startPos = UDim2.new(-0.5, -460, 0.5, -160)
                    elseif direction == "Right" then
                        startPos = UDim2.new(1.5, 460, 0.5, -160)
                    end

                    panelFrame.Position = startPos
                    panelFrame.BackgroundTransparency = 0
                    panelFrame.Visible = true

                    local tweenPanel = TweenService:Create(panelFrame, tweenInfoPanel, {
                        Position = UDim2.new(0.5, -230, 0.5, -160)
                    })
                    tweenPanel:Play()
                end)
            end
        elseif panelDragging then
            panelDragging = false
        end
    end
end)

-- 面板拖动开始
panelFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        panelDragging = true
        panelDragStart = input.Position
        panelStartPos = panelFrame.Position
    end
end)

-- 点击减号按钮：面板滑出，悬浮窗淡入
minusButton.MouseButton1Click:Connect(function()
    local directions = {"Top", "Bottom", "Left", "Right"}
    local direction = directions[math.random(1, 4)]
    local screenSize = GuiService:GetScreenResolution()
    local endPos

    if direction == "Top" then
        endPos = UDim2.new(0.5, -230, -0.5, -320)
    elseif direction == "Bottom" then
        endPos = UDim2.new(0.5, -230, 1.5, 320)
    elseif direction == "Left" then
        endPos = UDim2.new(-0.5, -460, 0.5, -160)
    elseif direction == "Right" then
        endPos = UDim2.new(1.5, 460, 0.5, -160)
    end

    local tweenPanel = TweenService:Create(panelFrame, tweenInfoPanel, {
        Position = endPos
    })
    tweenPanel:Play()

    floatingFrame.Visible = true
    floatingFrame.Size = UDim2.new(0, 60, 0, 60)
    floatingFrame.BackgroundTransparency = 1
    uiStroke.Transparency = 1
    zText.TextTransparency = 1

    local tweenFloat = TweenService:Create(floatingFrame, tweenInfoClick, {
        Size = UDim2.new(0, 50, 0, 50),
        BackgroundTransparency = 0
    })
    local strokeTween = TweenService:Create(uiStroke, tweenInfoClick, {
        Transparency = 0,
        Thickness = 2
    })
    local textTween = TweenService:Create(zText, tweenInfoClick, {
        TextTransparency = 0
    })
    tweenFloat:Play()
    strokeTween:Play()
    textTween:Play()

    tweenPanel.Completed:Connect(function()
        panelFrame.Visible = false
    end)
end)
